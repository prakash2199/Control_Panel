
@model EquiModels.ReportItemsViewModel
@{

    string reportcode = "";

}



<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close btn-lg" onclick="javascript:location.reload()">
            &times;
        </button>
        <h4 class="modal-title" id="name">
            Report Items
        </h4>
    </div>
    @if (TempData["message"] != null && TempData["message"].ToString().Length > 0)
    {
        <div id="message">
            @TempData["message"]
        </div>
    }
    <div class="modal-body" style="height:500px; overflow-y:scroll;">
        <div>
            @using (Html.BeginForm("GetReportItems", "ReportItems", FormMethod.Post, new { @class = "form-Control", @onsubmit = "return OnFormSubmit(this);" }))
            {
                @Html.HiddenFor(x => x.ReportCode)
                @Html.HiddenFor(x => x.ReportType)
                @Html.HiddenFor(x => x.Category)
                @Html.HiddenFor(Model => Model.IsSectorItem)
                @Html.HiddenFor(Model => Model.ReportItemType)
                @Html.HiddenFor(x => x.ParentReportCode)

                <div id="reportgroup" style="float: left;width:174px;">
                    <table>
                        <tr>
                            <td>
                                &nbsp
                            </td>
                        </tr>
                        @if (ViewBag.ReportCategory != null)
                        {
                            foreach (var item in ViewBag.ReportCategory)
                            {
                                <tr>
                                    <td align="left">

                                        <a href="javascript:void(0);" @(item == Model.Category ? "class=selected" : "") onclick="ShowReportItems('@Model.ReportGroup','@Model.ReportCode','@Model.ParentReportCode','@Model.ReportItemType' ,'@item','GetReportItems','ReportItems');">@item</a>

                                    </td>
                                    <td>
                                        &nbsp
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
                <div class="row">
                    <div id="reportitems" class="form-group" style="float:right;width:950px;">

                        <table width="100%" class="popup_table">
                            <tr>
                                <th>
                                    Label
                                </th>
                                <th>
                                    Item Type
                                </th>
                                <th>
                                    Formula
                                </th>
                                <th>
                                    Sort Order
                                </th>
                                <th>
                                    Format
                                </th>
                                <th>
                                    Group
                                </th>
                                <th>
                                    Scale
                                </th>

                            </tr>

                            @if (Model.ReportItems != null)
                            {
                                for (int j = 0; j < Model.ReportItems.Count; j++)
                                {

                                    <tr>
                                        <td>
                                            @Html.TextBoxFor(x => x.ReportItems[j].Label, new { @class = "form-control" })
                                            @Html.HiddenFor(x => x.ReportItems[j].Category)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.ReportItems[j].Type, new SelectList(ViewBag.ItemTypes, Model.ReportItems[j].Type), new { @style = "width:100px;", @class = "form-control" })
                                        </td>
                                        <td class="form-group">
                                            @Html.DropDownListFor(x => x.ReportItems[j].ItemCode, new SelectList(ViewBag.Items, Model.ReportItems[j].ItemCode), "Select Formula", new { @class = "form-control demo-cs-multiselect", @style = "width:195px;" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.ReportItems[j].ItemSortOrder, new { @class = "form-control", @style = "width:84px;", onfocus = "setValue(this);", onchange = "swapValues(this)" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.ReportItems[j].Format, new { @class = "form-control" })
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.ReportItems[j].FormatGroup, new SelectList(ViewBag.FormatGroups, Model.ReportItems[j].FormatGroup), new { @class = "form-control", @style = "width:95px;" })
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.ReportItems[j].Scale, new SelectList(ViewBag.ScaleList, Model.ReportItems[j].Scale), "Select Scale", new { @class = "form-control", @style = "width:84px;" })
                                            @Html.HiddenFor(x => x.ReportItems[j].CategorySortOrder)
                                            @Html.HiddenFor(x => x.ReportItems[j].ReportType)
                                        </td>
                                    </tr>
                                }
                            }
                            <tr>
                                <td colspan="7" align="left">

                                    <input type="submit" value="Save" class="btn btn-info" id="save" />
                                    <input type="reset" value="Reset" class="btn btn-info" id="reset" />
                                    <input type="button" value="Close" data-dismiss="modal" onclick="javascript:location.reload()" class="btn btn-warning" />
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <br clear="all" />
            }
        </div>
    </div>
</div>
<script type="text/javascript">

    LoadDropDown();
   function OnFormSubmit(frm) {
        var res = '@TempData["message"]';
        SubmitForm(frm,res);
        return false;
    }


</script>

