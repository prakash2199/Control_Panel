
@model EquiModels.CorporateContactViewModel
@{string actionname = TempData["Actionname"].ToString();}


<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close btn-lg" data-dismiss="modal">
            &times;
        </button>
        @if (actionname == "Add")
        {
            <h4 class="modal-title" id="name">
                Add Corporate Contact
            </h4>
        }
        else
        {
            <h4 class="modal-title" id="name">@("Edit " + Model.Name)</h4>
        }
    </div>
    <div class="modal-body" style="height: 500px; overflow-y: scroll;">
        <img src="@Url.Content("~/Content/Images/loader.gif")" id="loading" class="loadingImg" height="90px" width="90px" />
        <div>
            <span style="color: red;"><em>* Indicates required field</em></span>
            <br />
            <div id="errormessage">
                <ul>
                    @if (ViewBag.Errors != null)
                    {
                        foreach (var err in ViewBag.Errors)
                        {
                            <li>@err.Value</li>
                        }
                    }

                </ul>
            </div>
            @if (TempData["message"] != null && TempData["message"].ToString().Length > 0)
            {
                <div id="message">
                    @TempData["message"]
                </div>
            }
            @using (Html.BeginForm(actionname, "CorporateContacts", FormMethod.Post, new { enctype = "multipart/form-data", @onsubmit = "return OnFormSubmit(this);" }))
            {
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.Name)
                @Html.HiddenFor(x => x.Sector)
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-xs-2 required">
                                        <label> First Name</label><span style="color: red; font-size: 17px;">*</span>
                                    </div>
                                    <div class="col-xs-4">
                                        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @maxlength = "255" })
                                    </div>
                                    <div class="col-xs-2">
                                        <label>Last Name</label>
                                    </div>
                                    <div class="col-xs-4">
                                        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", @maxlength = "255" })

                                    </div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-xs-2 required">
                                        <label> Company</label><span style="color: red; font-size: 17px;">*</span>
                                    </div>
                                    <div class="col-xs-4">
                                        @Html.DropDownListFor(x => x.CompanyId, ViewBag.CompanyList as SelectList, "Select Company", new { @class = "form-control demo-cs-multiselect" })
                                    </div>
                                    <div class="col-xs-2">
                                        <label>Designation</label>
                                    </div>
                                    <div class="col-xs-4">

                                        @Html.TextBoxFor(x => x.Designation, new { @class = "form-control", @maxlength = "255" })

                                    </div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-xs-2">
                                        <label> Phone</label>
                                    </div>
                                    <div class="col-xs-4 ">
                                        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", type = "tel", @maxlength = "50" })

                                    </div>

                                    <div class="col-xs-2 required">
                                        <label>Email</label><span style="color: red; font-size: 17px;">*</span>
                                    </div>
                                    <div class="col-xs-4">
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @maxlength = "255" })

                                    </div>

                                </div>

                                <br />

                                <div class="row">
                                    <div class="col-xs-2">
                                        <label>Mobile</label>
                                    </div>
                                    <div class="col-xs-4 ">
                                        @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control cellno", @maxlength = "15", onKeyDown = "doCheck(this)" })

                                    </div>

                                    <div class="col-xs-2 ">
                                        <label>Fax</label>
                                    </div>
                                    <div class="col-xs-4">
                                        @Html.TextBoxFor(x => x.Fax, new { @class = "form-control", @maxlength = "255" })

                                    </div>

                                </div>
                                <br />
                                @if (actionname == "Edit")
                                {
                                    <div class="row">
                                        <div class="col-xs-2">
                                            <label>Sector</label>
                                        </div>
                                        <div class="col-xs-4 ">
                                            @Html.DisplayTextFor(x => x.Sector)

                                        </div>

                                    </div>


                                    <br />
                                }
                                    <div class="row">
                                        <div class="col-xs-4">
                                            <input type="submit" class="btn btn-info" value="Save" id="save">
                                            <input type="button" class="btn btn-warning" value="Cancel" data-dismiss="modal">
                                        </div>
                                    </div>

                                </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $(".cellno").intlTelInput(
            {
                utilsScript: "Scripts/utils.js"
            });
        LoadDropDown();
        LoadPhone($('.cellno').val());
    });

    function doCheck(CurrentTextBox) {
        var keycode;
        var len;
        keycode = (event.which) ? event.which : event.keyCode;
        className = "country highlight";
        var data = document.getElementsByClassName(className)[0];

        if (typeof data === "undefined") {
            className = "country active";
            data = document.getElementsByClassName(className)[0];
            if (typeof data === "undefined") {
                className = "country preferred";
            }
        }
        len = document.getElementsByClassName(className)[0].lastChild.textContent.length;
        if (GetCursorLocation(CurrentTextBox) <= len - 1) {
            event.returnValue = false;
        }
        else if ((GetCursorLocation(CurrentTextBox) == len) && (keycode == 8)) {
            event.returnValue = false;
        }
        else {
            event.returnValue = true;
        }
    }

    @*$(function () {

        debugger
        var jsonMobile = '@Html.Raw(Json.Encode(Model.Mobile))';
        
           var Mobile = JSON.parse(jsonMobile);
           console.log(Mobile);
       
        if (Mobile != null) {
            validateMobile(Mobile, "Mobile");
        }
        else
        { $('.cellno').val("+91"); }

     });*@





    //function validateMobile(number, id) {
    //    var filter = /^\+(?:[0-9] ?){9,14}[0-9]$/;
    //    debugger;
    //    if (filter.test(number) && number.toString().length <= 4)
    //    {
    //        return true;
    //    }
    //    else {
    //        $("#" + id).removeClass("input-validation-error");
    //        $("#" + id).css("border-color", "red");
    //        $("#" + id).tooltip('destroy');
    //    }
    //}


    function OnFormSubmit(frm) {
        var res = ' @TempData["message"]';
        SubmitForm(frm,res);
        return false;
    }

    $("#Mobile").removeClass("input-validation-error");
    $("#Mobile").css("border", "1px solid #ccc");
    $("#Mobile").tooltip('destroy');


</script>






